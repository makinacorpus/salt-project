#
# CKAN - Pylons configuration
#
# These are some of the configuration options available for your CKAN
# instance. Check the documentation in 'doc/configuration.rst' or at the
# following URL for a description of what they do and the full list of
# available options:
#
# http://docs.ckan.org/en/latest/configuration.html
#
# The %(here)s variable will be replaced with the parent directory of this file
#

[DEFAULT]

# WARNING: *THIS SETTING MUST BE SET TO FALSE ON A PRODUCTION ENVIRONMENT*
debug = ${options.debug}

[server:main]
use = egg:Paste#http
host = ${options.host}
port = ${options.port}

[app:main]
use = egg:ckan
full_stack = true
cache_dir = /tmp/%(ckan.site_id)s/
ckan.cache_enabled=${options.cache_enabled}
ckan.cache_expires=${options.cache_expires}
ckan.cache_static_max_age=${options.cache_static_max_age}
beaker.session.key = ckan

# This is the secret token that the beaker library uses to hash the cookie sent
# to the client. `paster make-config` generates a unique value for this each
# time it generates a config file.
# openssl rand -base64 32
beaker.session.secret = ${options.beaker_secret}

# `paster make-config` generates a unique value for this each time it generates
# a config file.
# python -c "import uuid;print uuid.uuid4()"
app_instance_uuid = {${options.uuid}}

# repoze.who config
who.config_file = %(here)s/who.ini
who.log_level = ${options.who_log_level}
who.log_file = %(cache_dir)s/who_log.ini


## Database Settings
sqlalchemy.url = ${options.sqlalchemy_url}

#ckan.datastore.write_url = postgresql://ckan_default:pass@localhost/datastore_default
#ckan.datastore.read_url = postgresql://datastore_default:pass@localhost/datastore_default


## Site Settings
ckan.site_url = ${options.site_url}

## Authorization Settings
ckan.auth.anon_create_dataset = ${options.anon_create_dataset }
ckan.auth.create_unowned_dataset = ${options.create_unowned_dataset }
ckan.auth.create_dataset_if_not_in_organization = ${options.create_dataset_if_not_in_organization }
ckan.auth.user_create_groups = ${options.user_create_groups }
ckan.auth.user_create_organizations = ${options.user_create_organizations }
ckan.auth.user_delete_groups = ${options.user_delete_groups }
ckan.auth.user_delete_organizations = ${options.user_delete_organizations }
ckan.auth.create_user_via_api = ${options.create_user_via_api }
ckan.auth.create_user_via_web = ${options.create_user_via_web }


## Search Settings

ckan.site_id = ${options.siteid}
solr_url = ${options.sorl_url}

#ckan.simple_search = 1


## Plugins Settings

# Note: Add ``datastore`` to enable the CKAN DataStore
#       Add ``datapusher`` to enable DataPusher
#       Add ``pdf_preview`` to enable the resource preview for PDFs
#		Add ``resource_proxy`` to enable resorce proxying and get around the
#		same origin policy
ckan.plugins = ${options.plugins }


## Front-End Settings
ckan.site_title = ${options.site_title }
ckan.site_logo = ${options.site_logo }
ckan.site_description = ${options.site_description }
ckan.favicon = ${options.favicon }
ckan.gravatar_default = ${options.gravatar_default }
ckan.preview.direct = ${options.preview.direct }
ckan.preview.loadable = ${options.preview.loadable }

# package_hide_extras = for_search_index_only
#package_edit_return_url = http://another.frontend/dataset/<NAME>
#package_new_return_url = http://another.frontend/dataset/<NAME>
#ckan.recaptcha.publickey =
#ckan.recaptcha.privatekey =
#licenses_group_url = http://licenses.opendefinition.org/licenses/groups/ckan.json
# ckan.template_footer_end =


## Internationalisation Settings
ckan.locale_default = ${options.locale_default }
ckan.locale_order = ${options.locale_order }
ckan.locales_offered = ${options.locales_offered }
ckan.locales_filtered_out = ${options.locales_filtered_out }
## Feeds Settings

ckan.feeds.authority_name = ${options.feeds_authority_name }
ckan.feeds.date = ${options.feeds_date }
ckan.feeds.author_name = ${options.feeds_author_name }
ckan.feeds.author_link = ${options.feeds_author_link }

## Storage Settings

# Local file storage:
ofs.impl = pairtree
ofs.storage_dir = ${options.data_dir}

# Google cloud storage:
#ofs.impl = google
#ofs.gs_access_key_id =
#ofs.gs_secret_access_key =

# S3 cloud storage:
#ofs.impl = s3
#ofs.aws_access_key_id = ....
#ofs.aws_secret_access_key = ....

# 'Bucket' to use for file storage
#ckan.storage.bucket = default

# Prefix for uploaded files (only used for pairtree)
#ckan.storage.key_prefix = file/

# The maximum content size, in bytes, for uploads
#ckan.storage.max_content_length = 50000000

## Datapusher settings

# Make sure you have set up the DataStore

ckan.datapusher.formats = csv
ckan.datapusher.url = http://datapusher.ckan.org/

## Activity Streams Settings

#ckan.activity_streams_enabled = true
#ckan.activity_list_limit = 31
#ckan.activity_streams_email_notifications = true
# ckan.email_notifications_since = 2 days


## Email settings

email_to = you@yourdomain.com
error_email_from = paste@localhost
smtp.server = localhost
smtp.starttls = False
#smtp.user = your_username@gmail.com
#smtp.password = your_password
#smtp.mail_from =


## Logging configuration
[loggers]
keys = root, ckan, ckanext

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = ${options.root_log_level}
handlers = console

[logger_ckan]
level = ${options.ckan_log_level}
handlers = console
qualname = ckan
propagate = 0

[logger_ckanext]
level = ${options.ckanext_log_level}
handlers = console
qualname = ckanext
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
